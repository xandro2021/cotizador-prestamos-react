#+title: Proyecto Introductorio React-Redux-Vite

* Instalando Dependencias
** Iniciando el proyecto
+ Se mueve al nuevo proyecto create, se instala las dependencias y se pone a correr el proyecto
#+begin_src bash
npm create vite@latest
cd nombredelProyecto
npm install
npm run dev
#+end_src
** Otras Dependencias
*** TailwindCSS (Styles)
**** Instalacion
#+begin_src bash
npm i -D tailwindcss postcss autoprefixer
#+end_src
**** Inicializacion
+ El resultado crea dos archivos (tailwindcss.config, postcss.config)
#+begin_src bash
npx tailwindcss init -p
#+end_src
**** Archivo tailwind.config.js
+ Se modifica content para indicar donde se encuentran los archivos con estilos de tailwind en el proyecto
#+begin_src js
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}"
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
#+end_src
**** Archivo /src/index.css
+ Se incluyen referencias de tailwindcss
#+begin_src css
@tailwind base;
@tailwind components;
@tailwind utilities;
#+end_src
**** Regla styles de React
+ Al agregar una clase de tailwind de estilos para verificar su funcionamiento desde un componente como App.jsx se debe agregar Name a la palabra reservada de html para class, creadon asi className debido a que la palabra class en si ya es reservada para javascript y genera conflictos
#+begin_src rjsx
function App() {

  return (
    <h1 className="text-6xl">Hola Mundo</h1>
  )
}

export default App

#+end_src

* Carpetas creadas
** node_modules
+ Contiene todas las dependencias instaladas por medio de npm
** public
+ Es donde se guardan las imagenes, videos, hojas de estilos que se quieren utilizar en el proyecto
** src
+ Donde se escribe el codigo como funciones, componentes, hojas de estilos, o como el assets que contiene el logotipo de react
+ Se elimina el archivo de App.css debido a que en este proyecto se trabaja con TailwindCSS
+ Se elimina los defaults de index.css
+ Se elimina la carpeta de assets
*** App.jsx
+ Se ha eliminado gran parte del default para solo dejar
+ App.jsx es un componente, los cuales son funciones que se empiezan su nombre en mayuscula por regla general
#+begin_src rjsx
function App() {

  return (
    <h1>Hola Mundo</h1>
  )
}

export default App
#+end_src
*** main.jsx
+ Es el archivo principal, se encarga de importar react, montarlo en el html y de agregar todos los componentes. Archivo mas importante en react
#+begin_src js
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)

#+end_src
